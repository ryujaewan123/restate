function _0x1() {
    const _0x2 = [
        'function',
        'forEach',
        'useState',
        'find',
        'push',
        'findIndex',
        'splice',
        '208130RXyTQY',
        '5816UndzHw',
        '549sBBHbW',
        '8mZKpGx',
        '1045055oJQHxi',
        '4778376QIlaBI',
        '2766827LMHNwM',
        '8amMzVd',
        '2260089LBPNrY',
        '170WEGcmV',
        '2001109LCSxIt',
        'value',
        'setState',
        'alwaysUpda',
        'topLevelCh',
        'ange',
        'anyLevelCh',
        'object',
        'has',
        'get',
        'set',
        'keys',
        'length',
        'every',
        'includes',
        'some',
        'updateOn'
    ];
    _0x1 = function () {
        return _0x2;
    };
    return _0x1();
}
const _0x3 = _0x4;
(function (_0x5, _0x6) {
    const _0x7 = _0x4, _0x8 = _0x5();
    while (!![]) {
        try {
            const _0x9 = -parseInt(_0x7(0x81)) / 0x1 + -parseInt(_0x7(0x82)) / 0x2 * (parseInt(_0x7(0x83)) / 0x3) + parseInt(_0x7(0x84)) / 0x4 * (-parseInt(_0x7(0x85)) / 0x5) + -parseInt(_0x7(0x86)) / 0x6 + -parseInt(_0x7(0x87)) / 0x7 + parseInt(_0x7(0x88)) / 0x8 * (-parseInt(_0x7(0x89)) / 0x9) + parseInt(_0x7(0x8a)) / 0xa * (parseInt(_0x7(0x8b)) / 0xb);
            if (_0x9 === _0x6)
                break;
            else
                _0x8['push'](_0x8['shift']());
        } catch (_0x10) {
            _0x8['push'](_0x8['shift']());
        }
    }
}(_0x1, 0x78009));
const _0x11 = [
    _0x3(0x8c),
    _0x3(0x8d),
    _0x3(0x8e) + 'te',
    _0x3(0x8f) + _0x3(0x90),
    _0x3(0x91) + _0x3(0x90)
];
import _0x12, { useEffect } from 'react';
function _0x13(_0x14, _0x15, _0x16 = new WeakMap()) {
    const _0x17 = _0x3;
    if (_0x14 === _0x15)
        return !![];
    if (typeof _0x14 !== _0x17(0x92) || _0x14 === null || typeof _0x15 !== _0x17(0x92) || _0x15 === null)
        return _0x14 === _0x15;
    if (_0x16[_0x17(0x93)](_0x14))
        return _0x16[_0x17(0x94)](_0x14) === _0x15;
    _0x16[_0x17(0x95)](_0x14, _0x15);
    const _0x18 = Object[_0x17(0x96)](_0x14), _0x19 = Object[_0x17(0x96)](_0x15);
    if (_0x18[_0x17(0x97)] !== _0x19[_0x17(0x97)])
        return ![];
    return _0x18[_0x17(0x98)](_0x20 => _0x19[_0x17(0x99)](_0x20) && _0x13(_0x14[_0x20], _0x15[_0x20], _0x16)) && _0x19[_0x17(0x98)](_0x21 => _0x18[_0x17(0x99)](_0x21));
}
function _0x22(_0x23, _0x24) {
    const _0x25 = _0x3, _0x26 = Object[_0x25(0x96)](_0x23), _0x27 = Object[_0x25(0x96)](_0x24);
    if (_0x26[_0x25(0x97)] !== _0x27[_0x25(0x97)])
        return !![];
    return _0x26[_0x25(0x9a)](_0x28 => {
        const _0x29 = _0x25;
        if (!_0x27[_0x29(0x99)](_0x28))
            return !![];
        if (typeof _0x23[_0x28] !== typeof _0x24[_0x28])
            return !![];
        return _0x23[_0x28] !== _0x24[_0x28];
    });
}
function _0x30(_0x31, _0x32) {
    const _0x33 = _0x3;
    if (_0x31 === _0x32)
        return ![];
    if (typeof _0x31 !== _0x33(0x92) || _0x31 === null || typeof _0x32 !== _0x33(0x92) || _0x32 === null)
        return _0x31 !== _0x32;
    return !_0x13(_0x31, _0x32);
}
export function restate(_0x34, _0x35, _0x36) {
    const _0x37 = _0x3;
    _0x36 = _0x36 || {};
    let _0x38 = _0x36[_0x37(0x9b)] || _0x37(0x8d);
    const _0x39 = [];
    let _0x40 = _0x34;
    const _0x41 = _0x42 => {
        const _0x43 = _0x37;
        typeof _0x42 === _0x43(0x9c) && (_0x42 = _0x42({ [_0x11[0x0]]: _0x40 }));
        if (_0x38 === updateOnTypes[_0x43(0x8e) + 'te']) {
        } else {
            if (_0x38 === updateOnTypes[_0x43(0x8f) + _0x43(0x90)] && !_0x22(_0x40, _0x42)) {
                _0x40 = _0x42;
                return;
            } else {
                if (_0x38 === updateOnTypes[_0x43(0x91) + _0x43(0x90)] && !_0x30(_0x40, _0x42)) {
                    _0x40 = _0x42;
                    return;
                }
            }
        }
        _0x39[_0x43(0x9d)](([_0x44, _0x45]) => {
            const _0x46 = _0x43;
            if (typeof _0x45 === _0x46(0x9c) && !_0x45(_0x40, _0x42))
                return;
            _0x44(_0x42);
        }), _0x40 = _0x42;
    };
    let _0x47 = ![], _0x48 = null;
    const _0x49 = () => {
            const _0x50 = _0x37;
            if (!_0x39[_0x50(0x97)])
                return;
            if (_0x47)
                return;
            _0x47 = !![], _0x48 = _0x35({
                [_0x11[0x1]]: _0x41,
                [_0x11[0x0]]: _0x40
            });
        }, _0x51 = () => {
            const _0x52 = _0x37;
            if (_0x39[_0x52(0x97)])
                return;
            if (!_0x47)
                return;
            _0x47 = ![], typeof _0x48 === _0x52(0x9c) && _0x48();
        };
    function _0x53(_0x54) {
        const _0x55 = _0x37;
        let [_0x56, _0x57] = _0x12[_0x55(0x9e)](_0x40);
        return useEffect(() => {
            const _0x58 = _0x55;
            if (!_0x39[_0x58(0x9f)](([_0x59]) => _0x59 === _0x57)) {
                let _0x60 = undefined;
                if (typeof _0x54 === _0x58(0x9c))
                    _0x60 = _0x54;
                else {
                    if (typeof _0x54 === _0x58(0x92) && _0x54 !== null) {
                        let _0x61 = _0x54[_0x58(0x9b)];
                        if (_0x61 === updateOnTypes[_0x58(0x8e) + 'te']) {
                        } else {
                            if (_0x61 === updateOnTypes[_0x58(0x8f) + _0x58(0x90)])
                                _0x60 = (_0x62, _0x63) => _0x22(_0x62, _0x63);
                            else
                                _0x61 === updateOnTypes[_0x58(0x91) + _0x58(0x90)] && (_0x60 = (_0x64, _0x65) => _0x30(_0x64, _0x65));
                        }
                    }
                }
                _0x39[_0x58(0xa0)]([
                    _0x57,
                    _0x60
                ]);
            }
            return _0x49(), () => {
                const _0x66 = _0x58;
                let _0x67 = _0x39[_0x66(0xa1)](([_0x68]) => _0x68 === _0x68);
                _0x67 !== -0x1 && _0x39[_0x66(0xa2)](_0x67, 0x1), _0x51();
            };
        }, []), [
            _0x56,
            _0x41
        ];
    }
    const _0x69 = _0x70 => _0x53(_0x70);
    return _0x69[_0x37(0x94)] = () => _0x40, _0x69[_0x37(0x95)] = (..._0x71) => _0x41(..._0x71), _0x69;
}
function _0x4(_0x72, _0x73) {
    const _0x1d0 = _0x1();
    return _0x4 = function (_0x4ce, _0x76) {
        _0x4ce = _0x4ce - 0x81;
        let _0x77 = _0x1d0[_0x4ce];
        return _0x77;
    }, _0x4(_0x72, _0x73);
}
export const updateOnTypes = {
    [_0x11[0x2]]: _0x3(0x8e) + 'te',
    [_0x11[0x3]]: _0x3(0x8f) + _0x3(0x90),
    [_0x11[0x4]]: _0x3(0x91) + _0x3(0x90)
};